[
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this low severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 42 failed logons from external IP, targeting 3 accounts, severity Low\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Low\" | where count > 21 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Low - **ETA**: 26 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: false duration: 6600 - action: block_ip approval_required: false duration: 13200 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Low \u23f0 **Response Time**: 26 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8855618503712165,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Low",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this low severity authentication incident. Include d..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this low severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 18 failed logons from external IP, targeting 3 accounts, severity Low\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Low\" | where count > 9 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Low - **ETA**: 14 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: false duration: 3000 - action: block_ip approval_required: false duration: 6000 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Low \u23f0 **Response Time**: 14 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8857971444888635,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Low",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this low severity authentication incident. Include d..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK T1110.004 (Credential Stuffing) with detection strategies and response procedures.\n\n### Input:\nSOC analyst needs to understand reusing leaked credentials attacks and implement detection\n\n### Response:\n**MITRE ATT&CK T1110.004: Credential Stuffing** **Technique Description:** Reusing leaked credentials - adversaries attempt to gain unauthorized access through automated credential testing. **Detection Indicators:** - Multiple authentication failures with consistent patterns - Sequential account targeting from single source - Timing patterns indicating automated tools - Low success rate with high volume attempts **Detection Rules:** ```spl index=security EventCode=4625 | stats count, dc(Account_Name) as unique_accounts by src_ip | where count > 10 AND unique_accounts > 3 | eval technique_id=\"T1110.004\" ``` **Response Actions:** 1. **Immediate**: Block source IP at perimeter 2. **Investigation**: Analyze attack patterns and scope 3. **Containment**: Implement additional access controls 4. **Recovery**: Review compromised accounts",
    "metadata": {
      "quality_score": 0.9156335115864527,
      "tags": [
        "ATTACK:T1110.004",
        "Teacher",
        "Detection"
      ],
      "original_instruction": "Explain MITRE ATT&CK T1110.004 (Credential Stuffing) with detection strategies and response procedur..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this medium severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 44 failed logons from external IP, targeting 4 accounts, severity Medium\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Medium\" | where count > 22 OR accounts > 2 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Medium - **ETA**: 27 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: false duration: 6900 - action: block_ip approval_required: false duration: 13800 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Medium \u23f0 **Response Time**: 27 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8821030268418046,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Medium",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this medium severity authentication incident. Includ..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain Windows Event 4625 (Failed Logon) for policy_change scenario. Include key fields, false positive patterns, and ATT&CK mapping.\n\n### Input:\nMultiple 4625 events detected: policy_change pattern with LogonType 3, 9 failures in 3 minutes\n\n### Response:\n**Windows Event 4625 Analysis: Policy_Change** **Event Overview:** Failed logon events indicating policy change pattern with specific characteristics requiring analysis. **Key Fields:** - **EventID**: 4625 (Authentication failure) - **LogonType**: 3 (Network logon) - **FailureReason**: 0xC000006D (Unknown username or bad password) - **IpAddress**: Source IP for geographic and reputation analysis - **AccountName**: Target account for privilege assessment **ATT&CK Mapping:** - **Technique**: T1110 (Brute Force) - **Sub-technique**: T1110.001 (Password Guessing) or T1110.003 (Password Spraying) **False Positive Analysis:** - Service account password expiration (False) - User behavior patterns (False) - Infrastructure issues (False) **Investigation Steps:** 1. Verify source IP legitimacy 2. Check account privileges and usage patterns 3. Correlate with successful authentications 4. Review business context and timing",
    "metadata": {
      "quality_score": 0.6722614139233676,
      "tags": [
        "Windows:4625",
        "ATTACK:T1110",
        "Teacher",
        "Scenario:policy_change"
      ],
      "original_instruction": "Explain Windows Event 4625 (Failed Logon) for policy_change scenario. Include key fields, false posi..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a comprehensive SOAR playbook for phishing investigation.\n\n### Input:\nSecurity team needs automated response for: User reports suspicious email\n\n### Response:\n**SOAR Playbook: Phishing Investigation** **Trigger Condition:** User reports suspicious email **Playbook Steps:** 1. Email analysis 2. URL/attachment scanning 3. User impact assessment 4. Response actions **Automation Workflow:** ```python # SOAR Playbook Implementation class PhishingInvestigationPlaybook: def __init__(self): self.name = \"phishing_investigation\" self.severity_threshold = \"medium\" self.auto_approve = False async def execute(self, incident): # Step 1: Initial assessment assessment = await self.assess_incident(incident) # Step 2: Automated actions if assessment.confidence > 0.8: await self.execute_immediate_actions(incident) # Step 3: Human approval for critical actions if assessment.requires_approval: approval = await self.request_approval(incident, assessment) if approval.approved: await self.execute_approved_actions(incident, approval.actions) # Step 4: Documentation and learning await self.document_incident(incident, assessment) return assessment async def assess_incident(self, incident): # Implement assessment logic pass ``` **Integration Points:** - SIEM: Receive alerts and enrich with context - EDR: Execute containment actions - Threat Intelligence: Correlate with known threats - Communication: Notify stakeholders **Approval Gates:** - High-impact actions require human approval - Low-risk actions can be auto-executed - All actions are logged and auditable **Success Metrics:** - Mean time to detection (MTTD) - Mean time to response (MTTR) - False positive reduction - Analyst productivity improvement",
    "metadata": {
      "quality_score": 0.7150931297709924,
      "tags": [],
      "original_instruction": "Create a comprehensive SOAR playbook for phishing investigation."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this high severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 30 failed logons from external IP, targeting 3 accounts, severity High\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"High\" | where count > 15 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: High - **ETA**: 20 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: true duration: 4800 - action: block_ip approval_required: true duration: 9600 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: High \u23f0 **Response Time**: 20 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8847618503712165,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:High",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this high severity authentication incident. Include ..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK technique T1110 (Brute Force) and provide comprehensive detection and response guidance.\n\n### Input:\nSecurity analyst needs to understand Brute Force attacks and how to detect them.\n\n### Response:\n**MITRE ATT&CK T1110: Brute Force** **Description:** Adversaries may use brute force techniques to gain access to accounts **Detection Strategy:** Monitor for multiple failed authentication attempts **Key Indicators:** - Unusual process behavior - Suspicious network connections - Anomalous authentication patterns - Unexpected file modifications **Response Actions:** 1. **Immediate**: Isolate affected systems 2. **Investigation**: Analyze attack timeline and scope 3. **Containment**: Block malicious IPs and processes 4. **Recovery**: Restore from clean backups if needed **Mitigation:** Implement account lockout policies and MFA **Hunting Queries:** ```spl index=security technique_id=\"T1110\" | stats count by src_ip, dest_host, process_name | where count > threshold ``` **References:** - MITRE ATT&CK: https://attack.mitre.org/techniques/T1110/ - NIST SP 800-53 controls - CIS Critical Security Controls",
    "metadata": {
      "quality_score": 0.8537945945945946,
      "tags": [],
      "original_instruction": "Explain MITRE ATT&CK technique T1110 (Brute Force) and provide comprehensive detection and response ..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK technique T1566 (Phishing) and provide comprehensive detection and response guidance.\n\n### Input:\nSecurity analyst needs to understand Phishing attacks and how to detect them.\n\n### Response:\n**MITRE ATT&CK T1566: Phishing** **Description:** Adversaries may send phishing messages to gain access to victim systems **Detection Strategy:** Monitor email attachments and suspicious links **Key Indicators:** - Unusual process behavior - Suspicious network connections - Anomalous authentication patterns - Unexpected file modifications **Response Actions:** 1. **Immediate**: Isolate affected systems 2. **Investigation**: Analyze attack timeline and scope 3. **Containment**: Block malicious IPs and processes 4. **Recovery**: Restore from clean backups if needed **Mitigation:** User training and email security controls **Hunting Queries:** ```spl index=security technique_id=\"T1566\" | stats count by src_ip, dest_host, process_name | where count > threshold ``` **References:** - MITRE ATT&CK: https://attack.mitre.org/techniques/T1566/ - NIST SP 800-53 controls - CIS Critical Security Controls",
    "metadata": {
      "quality_score": 0.7919092436974791,
      "tags": [],
      "original_instruction": "Explain MITRE ATT&CK technique T1566 (Phishing) and provide comprehensive detection and response gui..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK T1110.002 (Password Cracking) with detection strategies and response procedures.\n\n### Input:\nSOC analyst needs to understand offline hash cracking attacks and implement detection\n\n### Response:\n**MITRE ATT&CK T1110.002: Password Cracking** **Technique Description:** Offline hash cracking - adversaries attempt to gain unauthorized access through automated credential testing. **Detection Indicators:** - Multiple authentication failures with consistent patterns - Sequential account targeting from single source - Timing patterns indicating automated tools - Low success rate with high volume attempts **Detection Rules:** ```spl index=security EventCode=4625 | stats count, dc(Account_Name) as unique_accounts by src_ip | where count > 10 AND unique_accounts > 3 | eval technique_id=\"T1110.002\" ``` **Response Actions:** 1. **Immediate**: Block source IP at perimeter 2. **Investigation**: Analyze attack patterns and scope 3. **Containment**: Implement additional access controls 4. **Recovery**: Review compromised accounts",
    "metadata": {
      "quality_score": 0.9132705882352941,
      "tags": [
        "ATTACK:T1110.002",
        "Teacher",
        "Detection"
      ],
      "original_instruction": "Explain MITRE ATT&CK T1110.002 (Password Cracking) with detection strategies and response procedures..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this high severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 46 failed logons from external IP, targeting 2 accounts, severity High\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"High\" | where count > 23 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: High - **ETA**: 28 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: true duration: 7200 - action: block_ip approval_required: true duration: 14400 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: High \u23f0 **Response Time**: 28 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8846442033123929,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:High",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this high severity authentication incident. Include ..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this critical severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 16 failed logons from external IP, targeting 2 accounts, severity Critical\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Critical\" | where count > 8 OR accounts > 2 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Critical - **ETA**: 13 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: true duration: 2700 - action: block_ip approval_required: true duration: 5400 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Critical \u23f0 **Response Time**: 13 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8802677327241576,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Critical",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this critical severity authentication incident. Incl..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this low severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 26 failed logons from external IP, targeting 4 accounts, severity Low\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Low\" | where count > 13 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Low - **ETA**: 18 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: false duration: 4200 - action: block_ip approval_required: false duration: 8400 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Low \u23f0 **Response Time**: 18 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8856794974300399,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Low",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this low severity authentication incident. Include d..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this low severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 10 failed logons from external IP, targeting 2 accounts, severity Low\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Low\" | where count > 5 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Low - **ETA**: 10 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: false duration: 1800 - action: block_ip approval_required: false duration: 3600 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Low \u23f0 **Response Time**: 10 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8857971444888635,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Low",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this low severity authentication incident. Include d..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this high severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 22 failed logons from external IP, targeting 2 accounts, severity High\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"High\" | where count > 11 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: High - **ETA**: 16 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: true duration: 3600 - action: block_ip approval_required: true duration: 7200 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: High \u23f0 **Response Time**: 16 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8847618503712165,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:High",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this high severity authentication incident. Include ..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK technique T1059 (Command and Scripting Interpreter) and provide comprehensive detection and response guidance.\n\n### Input:\nSecurity analyst needs to understand Command and Scripting Interpreter attacks and how to detect them.\n\n### Response:\n**MITRE ATT&CK T1059: Command and Scripting Interpreter** **Description:** Adversaries may abuse command interpreters to execute commands **Detection Strategy:** Monitor command-line activity and script execution **Key Indicators:** - Unusual process behavior - Suspicious network connections - Anomalous authentication patterns - Unexpected file modifications **Response Actions:** 1. **Immediate**: Isolate affected systems 2. **Investigation**: Analyze attack timeline and scope 3. **Containment**: Block malicious IPs and processes 4. **Recovery**: Restore from clean backups if needed **Mitigation:** Application controls and PowerShell logging **Hunting Queries:** ```spl index=security technique_id=\"T1059\" | stats count by src_ip, dest_host, process_name | where count > threshold ``` **References:** - MITRE ATT&CK: https://attack.mitre.org/techniques/T1059/ - NIST SP 800-53 controls - CIS Critical Security Controls",
    "metadata": {
      "quality_score": 0.7980958445763626,
      "tags": [],
      "original_instruction": "Explain MITRE ATT&CK technique T1059 (Command and Scripting Interpreter) and provide comprehensive d..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this critical severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 24 failed logons from external IP, targeting 3 accounts, severity Critical\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Critical\" | where count > 12 OR accounts > 2 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Critical - **ETA**: 17 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: true duration: 3900 - action: block_ip approval_required: true duration: 7800 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Critical \u23f0 **Response Time**: 17 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8801500856653341,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Critical",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this critical severity authentication incident. Incl..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate detection rules for MITRE ATT&CK technique T1055 (Process Injection).\n\n### Input:\nNeed to detect Process Injection attacks in SIEM environment.\n\n### Response:\n**Detection Rules for T1055: Process Injection** **Splunk Detection:** ```spl index=security sourcetype=WinEventLog:Security | eval technique_id=\"T1055\" | search EventCode=4624 OR EventCode=4625 | stats count by src_ip, user, technique_id | where count > 5 | eval severity=case(count > 20, \"High\", count > 10, \"Medium\", 1=1, \"Low\") ``` **LimaCharlie D&R Rule:** ```yaml detect: event: NEW_PROCESS op: and rules: - op: contains path: event/COMMAND_LINE value: suspicious_pattern case_sensitive: false respond: - action: report name: t1055_detection - action: isolation duration: 3600 reason: Potential Process Injection detected ``` **Sigma Rule:** ```yaml title: Process Injection Detection id: 6b5b16b3-3e55-4e77-981c-16699dceb0b5 status: experimental description: Detects potential Process Injection activity logsource: category: process_creation product: windows detection: selection: Image|endswith: '.exe' CommandLine|contains: 'suspicious' condition: selection falsepositives: - Legitimate administrative activity level: medium tags: - attack.t1055 ``` **Tuning Guidance:** - Adjust thresholds based on environment baseline - Whitelist known legitimate processes - Correlate with threat intelligence feeds",
    "metadata": {
      "quality_score": 0.7852530870199319,
      "tags": [],
      "original_instruction": "Create detection rules for MITRE ATT&CK technique T1055 (Process Injection)."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate detection rules for MITRE ATT&CK technique T1566 (Phishing).\n\n### Input:\nNeed to detect Phishing attacks in SIEM environment.\n\n### Response:\n**Detection Rules for T1566: Phishing** **Splunk Detection:** ```spl index=security sourcetype=WinEventLog:Security | eval technique_id=\"T1566\" | search EventCode=4624 OR EventCode=4625 | stats count by src_ip, user, technique_id | where count > 5 | eval severity=case(count > 20, \"High\", count > 10, \"Medium\", 1=1, \"Low\") ``` **LimaCharlie D&R Rule:** ```yaml detect: event: NEW_PROCESS op: and rules: - op: contains path: event/COMMAND_LINE value: suspicious_pattern case_sensitive: false respond: - action: report name: t1566_detection - action: isolation duration: 3600 reason: Potential Phishing detected ``` **Sigma Rule:** ```yaml title: Phishing Detection id: 77fbb308-98fb-4e77-981c-16699dceb0b5 status: experimental description: Detects potential Phishing activity logsource: category: process_creation product: windows detection: selection: Image|endswith: '.exe' CommandLine|contains: 'suspicious' condition: selection falsepositives: - Legitimate administrative activity level: medium tags: - attack.t1566 ``` **Tuning Guidance:** - Adjust thresholds based on environment baseline - Whitelist known legitimate processes - Correlate with threat intelligence feeds",
    "metadata": {
      "quality_score": 0.7822050420168067,
      "tags": [],
      "original_instruction": "Create detection rules for MITRE ATT&CK technique T1566 (Phishing)."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain Windows Event 4625 (Failed Logon) for external_attack scenario. Include key fields, false positive patterns, and ATT&CK mapping.\n\n### Input:\nMultiple 4625 events detected: external_attack pattern with LogonType 3, 5 failures in 2 minutes\n\n### Response:\n**Windows Event 4625 Analysis: External_Attack** **Event Overview:** Failed logon events indicating external attack pattern with specific characteristics requiring analysis. **Key Fields:** - **EventID**: 4625 (Authentication failure) - **LogonType**: 3 (Network logon) - **FailureReason**: 0xC000006D (Unknown username or bad password) - **IpAddress**: Source IP for geographic and reputation analysis - **AccountName**: Target account for privilege assessment **ATT&CK Mapping:** - **Technique**: T1110 (Brute Force) - **Sub-technique**: T1110.001 (Password Guessing) or T1110.003 (Password Spraying) **False Positive Analysis:** - Service account password expiration (False) - User behavior patterns (False) - Infrastructure issues (False) **Investigation Steps:** 1. Verify source IP legitimacy 2. Check account privileges and usage patterns 3. Correlate with successful authentications 4. Review business context and timing",
    "metadata": {
      "quality_score": 0.7301908256880734,
      "tags": [
        "Windows:4625",
        "ATTACK:T1110",
        "Teacher",
        "Scenario:external_attack"
      ],
      "original_instruction": "Explain Windows Event 4625 (Failed Logon) for external_attack scenario. Include key fields, false po..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this critical severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 40 failed logons from external IP, targeting 2 accounts, severity Critical\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Critical\" | where count > 20 OR accounts > 2 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Critical - **ETA**: 25 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: true duration: 6300 - action: block_ip approval_required: true duration: 12600 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Critical \u23f0 **Response Time**: 25 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8800324386065106,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Critical",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this critical severity authentication incident. Incl..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK T1110.001 (Password Guessing) with detection strategies and response procedures.\n\n### Input:\nSOC analyst needs to understand systematic password attempts attacks and implement detection\n\n### Response:\n**MITRE ATT&CK T1110.001: Password Guessing** **Technique Description:** Systematic password attempts - adversaries attempt to gain unauthorized access through automated credential testing. **Detection Indicators:** - Multiple authentication failures with consistent patterns - Sequential account targeting from single source - Timing patterns indicating automated tools - Low success rate with high volume attempts **Detection Rules:** ```spl index=security EventCode=4625 | stats count, dc(Account_Name) as unique_accounts by src_ip | where count > 10 AND unique_accounts > 3 | eval technique_id=\"T1110.001\" ``` **Response Actions:** 1. **Immediate**: Block source IP at perimeter 2. **Investigation**: Analyze attack patterns and scope 3. **Containment**: Implement additional access controls 4. **Recovery**: Review compromised accounts",
    "metadata": {
      "quality_score": 0.9139716686674669,
      "tags": [
        "ATTACK:T1110.001",
        "Teacher",
        "Detection"
      ],
      "original_instruction": "Explain MITRE ATT&CK T1110.001 (Password Guessing) with detection strategies and response procedures..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this high severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 14 failed logons from external IP, targeting 4 accounts, severity High\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"High\" | where count > 7 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: High - **ETA**: 12 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: true duration: 2400 - action: block_ip approval_required: true duration: 4800 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: High \u23f0 **Response Time**: 12 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.88487949743004,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:High",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this high severity authentication incident. Include ..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a comprehensive SOAR playbook for malware containment.\n\n### Input:\nSecurity team needs automated response for: Endpoint detection alert\n\n### Response:\n**SOAR Playbook: Malware Containment** **Trigger Condition:** Endpoint detection alert **Playbook Steps:** 1. Isolate endpoint 2. Collect forensics 3. Analyze malware 4. Remediate systems **Automation Workflow:** ```python # SOAR Playbook Implementation class MalwareContainmentPlaybook: def __init__(self): self.name = \"malware_containment\" self.severity_threshold = \"medium\" self.auto_approve = False async def execute(self, incident): # Step 1: Initial assessment assessment = await self.assess_incident(incident) # Step 2: Automated actions if assessment.confidence > 0.8: await self.execute_immediate_actions(incident) # Step 3: Human approval for critical actions if assessment.requires_approval: approval = await self.request_approval(incident, assessment) if approval.approved: await self.execute_approved_actions(incident, approval.actions) # Step 4: Documentation and learning await self.document_incident(incident, assessment) return assessment async def assess_incident(self, incident): # Implement assessment logic pass ``` **Integration Points:** - SIEM: Receive alerts and enrich with context - EDR: Execute containment actions - Threat Intelligence: Correlate with known threats - Communication: Notify stakeholders **Approval Gates:** - High-impact actions require human approval - Low-risk actions can be auto-executed - All actions are logged and auditable **Success Metrics:** - Mean time to detection (MTTD) - Mean time to response (MTTR) - False positive reduction - Analyst productivity improvement",
    "metadata": {
      "quality_score": 0.7126931297709924,
      "tags": [],
      "original_instruction": "Create a comprehensive SOAR playbook for malware containment."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain Windows Event 4625 (Failed Logon) for service_account scenario. Include key fields, false positive patterns, and ATT&CK mapping.\n\n### Input:\nMultiple 4625 events detected: service_account pattern with LogonType 3, 6 failures in 3 minutes\n\n### Response:\n**Windows Event 4625 Analysis: Service_Account** **Event Overview:** Failed logon events indicating service account pattern with specific characteristics requiring analysis. **Key Fields:** - **EventID**: 4625 (Authentication failure) - **LogonType**: 3 (Network logon) - **FailureReason**: 0xC000006D (Unknown username or bad password) - **IpAddress**: Source IP for geographic and reputation analysis - **AccountName**: Target account for privilege assessment **ATT&CK Mapping:** - **Technique**: T1110 (Brute Force) - **Sub-technique**: T1110.001 (Password Guessing) or T1110.003 (Password Spraying) **False Positive Analysis:** - Service account password expiration (True) - User behavior patterns (False) - Infrastructure issues (False) **Investigation Steps:** 1. Verify source IP legitimacy 2. Check account privileges and usage patterns 3. Correlate with successful authentications 4. Review business context and timing",
    "metadata": {
      "quality_score": 0.6702065359477124,
      "tags": [
        "Windows:4625",
        "ATTACK:T1110",
        "Teacher",
        "Scenario:service_account"
      ],
      "original_instruction": "Explain Windows Event 4625 (Failed Logon) for service_account scenario. Include key fields, false po..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK technique T1055 (Process Injection) and provide comprehensive detection and response guidance.\n\n### Input:\nSecurity analyst needs to understand Process Injection attacks and how to detect them.\n\n### Response:\n**MITRE ATT&CK T1055: Process Injection** **Description:** Adversaries may inject code into processes to evade defenses **Detection Strategy:** Monitor for process creation and memory modification **Key Indicators:** - Unusual process behavior - Suspicious network connections - Anomalous authentication patterns - Unexpected file modifications **Response Actions:** 1. **Immediate**: Isolate affected systems 2. **Investigation**: Analyze attack timeline and scope 3. **Containment**: Block malicious IPs and processes 4. **Recovery**: Restore from clean backups if needed **Mitigation:** Application isolation and endpoint protection **Hunting Queries:** ```spl index=security technique_id=\"T1055\" | stats count by src_ip, dest_host, process_name | where count > threshold ``` **References:** - MITRE ATT&CK: https://attack.mitre.org/techniques/T1055/ - NIST SP 800-53 controls - CIS Critical Security Controls",
    "metadata": {
      "quality_score": 0.7983267973856208,
      "tags": [],
      "original_instruction": "Explain MITRE ATT&CK technique T1055 (Process Injection) and provide comprehensive detection and res..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPropose comprehensive SOAR response actions for this low severity authentication incident. Include detection outline, playbook, LimaCharlie actions, and stakeholder communication.\n\n### Input:\nAuthentication attack detected: 34 failed logons from external IP, targeting 2 accounts, severity Low\n\n### Response:\n**SOAR Response Plan: Authentication Incident** **Detection Outline:** ```spl index=security EventCode=4625 src_ip=\"$source_ip$\" | stats count, dc(Account_Name) as accounts by src_ip | eval severity=\"Low\" | where count > 17 OR accounts > 1 ``` **Playbook Selection:** - **Primary**: PB-AUTH-001 (Brute Force Response) - **Severity**: Low - **ETA**: 22 minutes **LimaCharlie Actions (Approval Required):** ```yaml responses: - action: isolate_host approval_required: false duration: 5400 - action: block_ip approval_required: false duration: 10800 ``` **Stakeholder Communication:** \ud83d\udee1\ufe0f **SECURITY INCIDENT**: Authentication attack \ud83d\udcca **Severity**: Low \u23f0 **Response Time**: 22 minutes \ud83d\udc64 **Analyst**: {analyst_name} **Next Steps:** 1. Execute containment actions 2. Investigate account compromise 3. Document findings and lessons learned",
    "metadata": {
      "quality_score": 0.8855618503712165,
      "tags": [
        "Assistant",
        "SOAR:playbook",
        "Severity:Low",
        "Response"
      ],
      "original_instruction": "Propose comprehensive SOAR response actions for this low severity authentication incident. Include d..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain Windows Event 4625 (Failed Logon) for user_mistake scenario. Include key fields, false positive patterns, and ATT&CK mapping.\n\n### Input:\nMultiple 4625 events detected: user_mistake pattern with LogonType 3, 7 failures in 4 minutes\n\n### Response:\n**Windows Event 4625 Analysis: User_Mistake** **Event Overview:** Failed logon events indicating user mistake pattern with specific characteristics requiring analysis. **Key Fields:** - **EventID**: 4625 (Authentication failure) - **LogonType**: 3 (Network logon) - **FailureReason**: 0xC000006D (Unknown username or bad password) - **IpAddress**: Source IP for geographic and reputation analysis - **AccountName**: Target account for privilege assessment **ATT&CK Mapping:** - **Technique**: T1110 (Brute Force) - **Sub-technique**: T1110.001 (Password Guessing) or T1110.003 (Password Spraying) **False Positive Analysis:** - Service account password expiration (False) - User behavior patterns (True) - Infrastructure issues (False) **Investigation Steps:** 1. Verify source IP legitimacy 2. Check account privileges and usage patterns 3. Correlate with successful authentications 4. Review business context and timing",
    "metadata": {
      "quality_score": 0.6734143550998382,
      "tags": [
        "Windows:4625",
        "ATTACK:T1110",
        "Teacher",
        "Scenario:user_mistake"
      ],
      "original_instruction": "Explain Windows Event 4625 (Failed Logon) for user_mistake scenario. Include key fields, false posit..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain MITRE ATT&CK technique T1021 (Remote Services) and provide comprehensive detection and response guidance.\n\n### Input:\nSecurity analyst needs to understand Remote Services attacks and how to detect them.\n\n### Response:\n**MITRE ATT&CK T1021: Remote Services** **Description:** Adversaries may use valid accounts to log into remote services **Detection Strategy:** Monitor for unusual logon patterns and geographic anomalies **Key Indicators:** - Unusual process behavior - Suspicious network connections - Anomalous authentication patterns - Unexpected file modifications **Response Actions:** 1. **Immediate**: Isolate affected systems 2. **Investigation**: Analyze attack timeline and scope 3. **Containment**: Block malicious IPs and processes 4. **Recovery**: Restore from clean backups if needed **Mitigation:** Network segmentation and privileged access management **Hunting Queries:** ```spl index=security technique_id=\"T1021\" | stats count by src_ip, dest_host, process_name | where count > threshold ``` **References:** - MITRE ATT&CK: https://attack.mitre.org/techniques/T1021/ - NIST SP 800-53 controls - CIS Critical Security Controls",
    "metadata": {
      "quality_score": 0.7950631016042781,
      "tags": [],
      "original_instruction": "Explain MITRE ATT&CK technique T1021 (Remote Services) and provide comprehensive detection and respo..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a comprehensive SOAR playbook for data breach response.\n\n### Input:\nSecurity team needs automated response for: Data exfiltration detected\n\n### Response:\n**SOAR Playbook: Data Breach Response** **Trigger Condition:** Data exfiltration detected **Playbook Steps:** 1. Assess scope 2. Contain breach 3. Notify stakeholders 4. Forensic analysis **Automation Workflow:** ```python # SOAR Playbook Implementation class DataBreachResponsePlaybook: def __init__(self): self.name = \"data_breach_response\" self.severity_threshold = \"medium\" self.auto_approve = False async def execute(self, incident): # Step 1: Initial assessment assessment = await self.assess_incident(incident) # Step 2: Automated actions if assessment.confidence > 0.8: await self.execute_immediate_actions(incident) # Step 3: Human approval for critical actions if assessment.requires_approval: approval = await self.request_approval(incident, assessment) if approval.approved: await self.execute_approved_actions(incident, approval.actions) # Step 4: Documentation and learning await self.document_incident(incident, assessment) return assessment async def assess_incident(self, incident): # Implement assessment logic pass ``` **Integration Points:** - SIEM: Receive alerts and enrich with context - EDR: Execute containment actions - Threat Intelligence: Correlate with known threats - Communication: Notify stakeholders **Approval Gates:** - High-impact actions require human approval - Low-risk actions can be auto-executed - All actions are logged and auditable **Success Metrics:** - Mean time to detection (MTTD) - Mean time to response (MTTR) - False positive reduction - Analyst productivity improvement",
    "metadata": {
      "quality_score": 0.7120242424242424,
      "tags": [],
      "original_instruction": "Create a comprehensive SOAR playbook for data breach response."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain Windows Event 4625 (Failed Logon) for time_sync scenario. Include key fields, false positive patterns, and ATT&CK mapping.\n\n### Input:\nMultiple 4625 events detected: time_sync pattern with LogonType 3, 8 failures in 2 minutes\n\n### Response:\n**Windows Event 4625 Analysis: Time_Sync** **Event Overview:** Failed logon events indicating time sync pattern with specific characteristics requiring analysis. **Key Fields:** - **EventID**: 4625 (Authentication failure) - **LogonType**: 3 (Network logon) - **FailureReason**: 0xC000006D (Unknown username or bad password) - **IpAddress**: Source IP for geographic and reputation analysis - **AccountName**: Target account for privilege assessment **ATT&CK Mapping:** - **Technique**: T1110 (Brute Force) - **Sub-technique**: T1110.001 (Password Guessing) or T1110.003 (Password Spraying) **False Positive Analysis:** - Service account password expiration (False) - User behavior patterns (False) - Infrastructure issues (True) **Investigation Steps:** 1. Verify source IP legitimacy 2. Check account privileges and usage patterns 3. Correlate with successful authentications 4. Review business context and timing",
    "metadata": {
      "quality_score": 0.676620320855615,
      "tags": [
        "Windows:4625",
        "ATTACK:T1110",
        "Teacher",
        "Scenario:time_sync"
      ],
      "original_instruction": "Explain Windows Event 4625 (Failed Logon) for time_sync scenario. Include key fields, false positive..."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate detection rules for MITRE ATT&CK technique T1021 (Remote Services).\n\n### Input:\nNeed to detect Remote Services attacks in SIEM environment.\n\n### Response:\n**Detection Rules for T1021: Remote Services** **Splunk Detection:** ```spl index=security sourcetype=WinEventLog:Security | eval technique_id=\"T1021\" | search EventCode=4624 OR EventCode=4625 | stats count by src_ip, user, technique_id | where count > 5 | eval severity=case(count > 20, \"High\", count > 10, \"Medium\", 1=1, \"Low\") ``` **LimaCharlie D&R Rule:** ```yaml detect: event: NEW_PROCESS op: and rules: - op: contains path: event/COMMAND_LINE value: suspicious_pattern case_sensitive: false respond: - action: report name: t1021_detection - action: isolation duration: 3600 reason: Potential Remote Services detected ``` **Sigma Rule:** ```yaml title: Remote Services Detection id: 3c2f966b-e9fd-4e77-981c-16699dceb0b5 status: experimental description: Detects potential Remote Services activity logsource: category: process_creation product: windows detection: selection: Image|endswith: '.exe' CommandLine|contains: 'suspicious' condition: selection falsepositives: - Legitimate administrative activity level: medium tags: - attack.t1021 ``` **Tuning Guidance:** - Adjust thresholds based on environment baseline - Whitelist known legitimate processes - Correlate with threat intelligence feeds",
    "metadata": {
      "quality_score": 0.7845942634905202,
      "tags": [],
      "original_instruction": "Create detection rules for MITRE ATT&CK technique T1021 (Remote Services)."
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a secure Pod specification following Kubernetes security best practices\n\n### Input:\nDesign a Pod that runs nginx with maximum security hardening\n\n### Response:\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: secure-nginx\n  labels:\n    app: secure-nginx\nspec:\n  securityContext:\n    runAsNonRoot: true\n    runAsUser: 1001\n    runAsGroup: 1001\n    fsGroup: 1001\n    seccompProfile:\n      type: RuntimeDefault\n  containers:\n  - name: nginx\n    image: nginx:1.21.6@sha256:2834dc507516af02784808c5f48b7cbe38b8ed5d0f4837f16e78d00deb7e7767\n    securityContext:\n      allowPrivilegeEscalation: false\n      readOnlyRootFilesystem: true\n      capabilities:\n        drop:\n        - ALL\n      runAsNonRoot: true\n      runAsUser: 1001\n    ports:\n    - containerPort: 8080\n    volumeMounts:\n    - name: tmp\n      mountPath: /tmp\n    - name: var-cache-nginx\n      mountPath: /var/cache/nginx\n    - name: var-run\n      mountPath: /var/run\n  volumes:\n  - name: tmp\n    emptyDir: {}\n  - name: var-cache-nginx\n    emptyDir: {}\n  - name: var-run\n    emptyDir: {}\n```",
    "metadata": {
      "original_instruction": "Create a secure Pod specification following Kubernetes security best practices",
      "quality_score": 0.95,
      "tags": [
        "Kubernetes",
        "K8s:pod-security",
        "Difficulty:intermediate",
        "CloudNative",
        "ContainerSecurity"
      ],
      "domain": "kubernetes",
      "category": "pod-security"
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a NetworkPolicy for default-deny ingress and egress with selective allowances\n\n### Input:\nDesign network policies that implement zero-trust networking for a web application\n\n### Response:\n```yaml\n# Default deny all ingress traffic\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-ingress\n  namespace: production\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n---\n# Default deny all egress traffic  \napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-egress\n  namespace: production\nspec:\n  podSelector: {}\n  policyTypes:\n  - Egress\n---\n# Allow frontend to backend communication\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-frontend-to-backend\n  namespace: production\nspec:\n  podSelector:\n    matchLabels:\n      app: backend\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: frontend\n    ports:\n    - protocol: TCP\n      port: 8080\n---\n# Allow DNS resolution for all pods\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-dns-egress\n  namespace: production\nspec:\n  podSelector: {}\n  policyTypes:\n  - Egress\n  egress:\n  - to: []\n    ports:\n    - protocol: UDP\n      port: 53\n```",
    "metadata": {
      "original_instruction": "Create a NetworkPolicy for default-deny ingress and egress with selective allowances",
      "quality_score": 0.95,
      "tags": [
        "Kubernetes",
        "K8s:network-security",
        "Difficulty:advanced",
        "CloudNative",
        "ContainerSecurity"
      ],
      "domain": "kubernetes",
      "category": "network-security"
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain Kubernetes RBAC least privilege principles and create a Role for CI/CD pipeline\n\n### Input:\nHow do you implement RBAC for a CI service account that only needs to deploy specific resources?\n\n### Response:\n**RBAC Least Privilege Principles:**\n\n1. **Principle of Least Privilege**: Grant only minimum permissions needed\n2. **Resource Scoping**: Limit to specific namespaces and resource types\n3. **Verb Restrictions**: Use specific verbs (get, list, create) vs wildcards\n4. **Regular Auditing**: Review and rotate permissions periodically\n\n**CI/CD Service Account RBAC:**\n\n```yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: ci-deployer\n  namespace: ci-cd\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: production\n  name: ci-deployment-role\nrules:\n- apiGroups: [\"apps\"]\n  resources: [\"deployments\", \"replicasets\"]\n  verbs: [\"get\", \"list\", \"create\", \"update\", \"patch\"]\n- apiGroups: [\"\"]\n  resources: [\"services\", \"configmaps\", \"secrets\"]\n  verbs: [\"get\", \"list\", \"create\", \"update\"]\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"get\", \"list\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: ci-deployment-binding\n  namespace: production\nsubjects:\n- kind: ServiceAccount\n  name: ci-deployer\n  namespace: ci-cd\nroleRef:\n  kind: Role\n  name: ci-deployment-role\n  apiGroup: rbac.authorization.k8s.io\n```",
    "metadata": {
      "original_instruction": "Explain Kubernetes RBAC least privilege principles and create a Role for CI/CD pipeline",
      "quality_score": 0.95,
      "tags": [
        "Kubernetes",
        "K8s:rbac-security",
        "Difficulty:intermediate",
        "CloudNative",
        "ContainerSecurity"
      ],
      "domain": "kubernetes",
      "category": "rbac-security"
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nCreate a Gatekeeper constraint to enforce non-root containers\n\n### Input:\nWrite OPA Gatekeeper policy to prevent privileged container deployment\n\n### Response:\n```yaml\napiVersion: templates.gatekeeper.sh/v1beta1\nkind: ConstraintTemplate\nmetadata:\n  name: k8srequirenonroot\n  annotations:\n    description: Requires containers to run as non-root user\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sRequireNonRoot\n      validation:\n        openAPIV3Schema:\n          type: object\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8srequirenonroot\n        \n        violation[{\"msg\": msg}] {\n            container := input.review.object.spec.containers[_]\n            not container.securityContext.runAsNonRoot\n            msg := \"Container must set runAsNonRoot to true\"\n        }\n        \n        violation[{\"msg\": msg}] {\n            container := input.review.object.spec.containers[_] \n            container.securityContext.runAsUser == 0\n            msg := \"Container cannot run as root (runAsUser: 0)\"\n        }\n---\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sRequireNonRoot\nmetadata:\n  name: must-run-as-non-root\nspec:\n  match:\n    kinds:\n      - apiGroups: [\"\"]\n        kinds: [\"Pod\"]\n  parameters: {}\n```",
    "metadata": {
      "original_instruction": "Create a Gatekeeper constraint to enforce non-root containers",
      "quality_score": 0.95,
      "tags": [
        "Kubernetes",
        "K8s:admission-control",
        "Difficulty:advanced",
        "CloudNative",
        "ContainerSecurity"
      ],
      "domain": "kubernetes",
      "category": "admission-control"
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nExplain container image signing with cosign and supply chain security\n\n### Input:\nHow do you implement image signing and verification in Kubernetes for supply chain security?\n\n### Response:\n**Container Image Supply Chain Security with Cosign:**\n\n**1. Image Signing Process:**\n```bash\n# Generate key pair\ncosign generate-key-pair\n\n# Sign container image\ncosign sign --key cosign.key myregistry.com/myapp:v1.0.0\n\n# Generate SBOM attestation\nsyft myregistry.com/myapp:v1.0.0 -o spdx-json > sbom.json\ncosign attest --key cosign.key --predicate sbom.json myregistry.com/myapp:v1.0.0\n```\n\n**2. Verification Policy (Kyverno):**\n```yaml\napiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: verify-image-signatures\nspec:\n  validationFailureAction: enforce\n  background: false\n  rules:\n  - name: verify-signatures\n    match:\n      any:\n      - resources:\n          kinds:\n          - Pod\n    verifyImages:\n    - imageReferences:\n      - \"myregistry.com/*\"\n      attestors:\n      - entries:\n        - keys:\n            publicKeys: |\n              -----BEGIN PUBLIC KEY-----\n              MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE...\n              -----END PUBLIC KEY-----\n```\n\n**3. Best Practices:**\n- Pin images by digest, not tags\n- Block `:latest` tag usage  \n- Require SBOM attestations\n- Implement image scanning gates\n- Use admission controllers for verification\n- Rotate signing keys regularly",
    "metadata": {
      "original_instruction": "Explain container image signing with cosign and supply chain security",
      "quality_score": 0.95,
      "tags": [
        "Kubernetes",
        "K8s:supply-chain",
        "Difficulty:advanced",
        "CloudNative",
        "ContainerSecurity"
      ],
      "domain": "kubernetes",
      "category": "supply-chain"
    }
  },
  {
    "text": "Below is an instruction that describes a cybersecurity task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nRespond to a Kubernetes security incident involving privileged container escape\n\n### Input:\nA container was deployed with CAP_SYS_ADMIN and hostPID. What are the immediate containment and hardening steps?\n\n### Response:\n**\ud83d\udea8 KUBERNETES SECURITY INCIDENT RESPONSE**\n\n**Immediate Containment (Priority 1):**\n```bash\n# 1. Isolate the compromised pod immediately\nkubectl delete pod <compromised-pod> -n <namespace> --grace-period=0 --force\n\n# 2. Scale down the deployment to zero \nkubectl scale deployment <deployment-name> --replicas=0 -n <namespace>\n\n# 3. Create network isolation policy\nkubectl apply -f - <<EOF\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: isolate-compromised-app\n  namespace: <namespace>\nspec:\n  podSelector:\n    matchLabels:\n      app: <compromised-app>\n  policyTypes:\n  - Ingress\n  - Egress\nEOF\n```\n\n**Investigation (Priority 2):**\n```bash\n# Check for privilege escalation artifacts\nkubectl get events --sort-by='.lastTimestamp' -n <namespace>\n\n# Audit container runtime logs\nkubectl logs <pod-name> -n <namespace> --previous\n\n# Check node for host filesystem changes\nkubectl exec -it <node-debug-pod> -- chroot /host bash\nfind /var/log -name \"*$(date +%Y-%m-%d)*\" -type f -exec grep -l \"CAP_SYS_ADMIN\\|hostPID\" {} \\;\n```\n\n**Hardening (Priority 3):**\n```yaml\n# Implement Pod Security Standards\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: <namespace>\n  labels:\n    pod-security.kubernetes.io/enforce: restricted\n    pod-security.kubernetes.io/audit: restricted\n    pod-security.kubernetes.io/warn: restricted\n\n# Gatekeeper policy to prevent future incidents\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sRequiredSecurityContext\nmetadata:\n  name: deny-privileged-containers\nspec:\n  match:\n    kinds:\n    - apiGroups: [\"\"]\n      kinds: [\"Pod\"]\n  parameters:\n    forbiddenCapabilities: [\"CAP_SYS_ADMIN\", \"CAP_NET_ADMIN\"]\n    hostPID: false\n    privileged: false\n```\n\n**Verification:**\n- Confirm no lateral movement to other nodes\n- Validate no persistent backdoors created\n- Review RBAC permissions for the service account\n- Update incident response playbook",
    "metadata": {
      "original_instruction": "Respond to a Kubernetes security incident involving privileged container escape",
      "quality_score": 0.95,
      "tags": [
        "Kubernetes",
        "K8s:incident-response",
        "Difficulty:expert",
        "CloudNative",
        "ContainerSecurity"
      ],
      "domain": "kubernetes",
      "category": "incident-response"
    }
  }
]