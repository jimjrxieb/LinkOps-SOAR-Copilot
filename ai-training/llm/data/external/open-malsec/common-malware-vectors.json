[
  {
    "Instruction": "Analyze if the attached XLS file with macros is a common malware vector for delivering trojans.",
    "Input": "Users receive 'Invoice_Q4.xlsm' via email prompting macro enable. Macro code connects to suspicious IP.",
    "Output": "Likely a malicious macro Trojan. Advise blocking attachments by policy, disabling macros by default, and scanning with AV.",
    "Sentiment": "Negative",
    "Score": 0.92,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566.001: Spearphishing Attachment"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.5,
      "Malware_Vector": "Malicious Macro",
      "IoCs": {
        "attachments": ["Invoice_Q4.xlsm"],
        "ips": ["203.0.113.42"]
      }
    }
  },
  {
    "Instruction": "Check if the PDF with embedded JavaScript is a drive-by download vector for installing ransomware.",
    "Input": "Email claims: 'Open the attached secure PDF to view your payment'. PDF runs hidden JS on open.",
    "Output": "Malicious PDF delivering potential ransomware. Disable JavaScript in PDF readers, block suspicious attachments, and train staff.",
    "Sentiment": "Negative",
    "Score": 0.90,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566.001: Spearphishing Attachment"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.8,
      "Malware_Vector": "Malicious PDF",
      "IoCs": {
        "attachments": ["SecureInvoice.pdf"],
        "scripts": ["Embedded JavaScript"]
      }
    }
  },
  {
    "Instruction": "Analyze if the suspicious .exe attached in an email can be a direct malware dropper.",
    "Input": "Attachment named 'setup.exe' arrives from unknown sender, no message body. Execution triggers hidden process 'cryptolauncher.exe'.",
    "Output": "Likely a dropper for additional malware. Block the .exe, use advanced endpoint protection, and educate staff on unknown attachments.",
    "Sentiment": "Negative",
    "Score": 0.91,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059: Command and Scripting Interpreter"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.2,
      "Malware_Vector": "Malicious Executable",
      "IoCs": {
        "file_names": ["setup.exe", "cryptolauncher.exe"]
      }
    }
  },
  {
    "Instruction": "Identify if the infected Word document using DDE (Dynamic Data Exchange) is a common malware vector.",
    "Input": "Document with hidden DDE link triggers PowerShell script once the user agrees to 'update fields'.",
    "Output": "Malware delivery using DDE. Disable DDE macros in Office, limit PowerShell execution, and inform users not to permit unexpected updates.",
    "Sentiment": "Negative",
    "Score": 0.89,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059.001: PowerShell"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.4,
      "Malware_Vector": "DDE Attack",
      "IoCs": {
        "file_extensions": [".doc", ".docx"],
        "scripts": ["powershell payload"]
      }
    }
  },
  {
    "Instruction": "Determine if the malicious .js file attached in a zip is a typical vector for Trojan downloaders.",
    "Input": "Users receive 'YourReceipt.zip' containing 'receipt.js', code downloads additional payload from remote host.",
    "Output": "Common JavaScript downloader Trojan. Block .js attachments, restrict script execution, and check for second-stage payload.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566.001: Spearphishing Attachment"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.1,
      "Malware_Vector": "Malicious JavaScript",
      "IoCs": {
        "attachments": ["YourReceipt.zip", "receipt.js"],
        "domains": ["malicious-host.org"]
      }
    }
  },
  {
    "Instruction": "Assess the drive-by download from a compromised website using an exploit kit to deliver spyware.",
    "Input": "Visiting a legitimate site redirects to malicious iframe, launching 'Neutrino exploit kit' to install spyware.",
    "Output": "Exploit kit drive-by. Patch browsers/plugins, enable ad/script blocking, and consider sandbox for suspicious traffic analysis.",
    "Sentiment": "Negative",
    "Score": 0.93,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1189: Drive-by Compromise"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 8.0,
      "Malware_Vector": "Exploit Kit",
      "IoCs": {
        "domains": ["compromised-legitsite.com", "neutrino.ek"],
        "ips": []
      }
    }
  },
  {
    "Instruction": "Analyze if the malicious browser extension from an unofficial store is a common malware vector.",
    "Input": "Extension 'DiscountSaver' claims coupons but actually logs user keystrokes and sends them to remote server.",
    "Output": "Adware-turned-keylogger extension. Remove or block unverified extensions, deploy endpoint monitoring, and only install from official stores.",
    "Sentiment": "Negative",
    "Score": 0.87,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1176: Browser Extensions"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 5.8,
      "Malware_Vector": "Malicious Browser Extension",
      "IoCs": {
        "extension_names": ["DiscountSaver"],
        "domains": ["remotelogger.site"]
      }
    }
  },
  {
    "Instruction": "Check if malicious ads (malvertising) on a legitimate news site lead to exploit kit downloads.",
    "Input": "Banner ads redirect to 'adnetwork.ru' hosting exploit code, no user click required to trigger the payload.",
    "Output": "Malvertising campaign. Implement ad-block solutions, patch browsers, and notify the legitimate site to remove malicious ads.",
    "Sentiment": "Negative",
    "Score": 0.91,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1189: Drive-by Compromise"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 7.2,
      "Malware_Vector": "Malvertising",
      "IoCs": {
        "domains": ["adnetwork.ru"],
        "ips": []
      }
    }
  },
  {
    "Instruction": "Identify if the phishing link disguised as a cloud storage share is installing a remote access trojan (RAT).",
    "Input": "Link: 'mycloud-share.net/YourFiles' downloads 'updater.exe' that spawns RAT process in background.",
    "Output": "Common RAT infection via phishing link. Warn users, block domain, and run endpoint scans for RAT signatures.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566.002: Spearphishing Link"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 7.5,
      "Malware_Vector": "Phishing Link",
      "IoCs": {
        "domains": ["mycloud-share.net"],
        "file_names": ["updater.exe"]
      }
    }
  },
  {
    "Instruction": "Assess if the trojanized cracked software from a torrent site is a frequent malware vector.",
    "Input": "User downloads 'PhotoshopCrack.exe' from a torrent, it silently installs a keylogger and crypto miner.",
    "Output": "Cracked software trojan. Avoid pirated downloads, run AV scans, and remove unauthorized software to reduce infection risk.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1587: Develop Capabilities"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.6,
      "Malware_Vector": "Trojanized Cracked Software",
      "IoCs": {
        "file_names": ["PhotoshopCrack.exe"],
        "malware_family": ["Keylogger", "Crypto Miner"]
      }
    }
  },
  {
    "Instruction": "Check if a Microsoft Publisher file with embedded macros is used to deliver ransomware.",
    "Input": "Attached .pub file triggers macros on open, contacting a C2 server to download encryption routine.",
    "Output": "Publisher file as a less-common macro vector. Block .pub attachments, train staff, and filter suspicious macros at gateway.",
    "Sentiment": "Negative",
    "Score": 0.86,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566.001: Spearphishing Attachment"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.9,
      "Malware_Vector": "Malicious Publisher Macro",
      "IoCs": {
        "file_extensions": [".pub"],
        "domains": []
      }
    }
  },
  {
    "Instruction": "Analyze if a .vbs script attached in an email is dropping an info-stealer payload.",
    "Input": "Script references WScript.Shell calls to fetch 'info_stealer.dll' from remote host, then registers it as startup task.",
    "Output": "VBS dropper. Block email attachments with .vbs, run endpoint scanning, and block outbound calls to suspicious hosts.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059: Command and Scripting Interpreter"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.5,
      "Malware_Vector": "Malicious VBScript",
      "IoCs": {
        "scripts": ["payload.vbs"],
        "file_names": ["info_stealer.dll"]
      }
    }
  },
  {
    "Instruction": "Determine if an infected USB drive, found in a parking lot, is being used as a social engineering/malware vector.",
    "Input": "User plugged found USB into corporate laptop. Autorun installed 'USBWorm.exe' that spread across shared drives.",
    "Output": "Common tactic: infected USB with autorun worm. Enforce USB policies, disable autorun, and scan external media.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1091: Replication Through Removable Media"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.4,
      "Malware_Vector": "Infected USB",
      "IoCs": {
        "file_names": ["USBWorm.exe"],
        "removable_media": ["Unknown USB drive"]
      }
    }
  },
  {
    "Instruction": "Check if malicious LNK files disguised as PDFs is a vector installing backdoor trojans.",
    "Input": "Filename 'Report_Q1.pdf.lnk' on Windows, double-click runs hidden PowerShell script fetching trojan.",
    "Output": "LNK file trick. Educate staff about suspicious double extensions, enable file extension visibility, and block .lnk from emails.",
    "Sentiment": "Negative",
    "Score": 0.89,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.6,
      "Malware_Vector": "Malicious LNK File",
      "IoCs": {
        "file_names": ["Report_Q1.pdf.lnk"],
        "scripts": ["PowerShell Trojan fetch"]
      }
    }
  },
  {
    "Instruction": "Analyze if the APK distributed outside official stores is a typical Android trojan vector.",
    "Input": "App 'FreeGems.apk' requests SMS, contacts, and admin privileges, secretly runs data exfil routines.",
    "Output": "Trojanized Android app. Only download from official stores, check app permissions, and install MDM solutions for enterprise devices.",
    "Sentiment": "Negative",
    "Score": 0.87,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1412: Data from Local System (Mobile)"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.9,
      "Malware_Vector": "Trojanized APK",
      "IoCs": {
        "file_names": ["FreeGems.apk"],
        "permissions": ["SEND_SMS", "READ_CONTACTS", "DEVICE_ADMIN"]
      }
    }
  },
  {
    "Instruction": "Assess the use of Windows CHM (compiled HTML) file to launch a malicious script as a rarely used vector.",
    "Input": "CHM help file named 'OrderGuide.chm' executes hidden JavaScript fetching RAT from remote host.",
    "Output": "Malicious CHM. Block or warn on .chm attachments, use static/dynamic analysis to detect hidden code, and train staff.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.1,
      "Malware_Vector": "Malicious CHM File",
      "IoCs": {
        "file_names": ["OrderGuide.chm"],
        "domains": []
      }
    }
  },
  {
    "Instruction": "Determine if the infected .iso file containing disguised docs is a container-based malware vector.",
    "Input": "'InvoiceDocs.iso' actually includes an executable ‘doc-viewer.exe’ that spawns a keylogger process.",
    "Output": "Attackers use ISO to evade filters. Avoid mounting unsolicited ISO files, use endpoint security, and scan containers thoroughly.",
    "Sentiment": "Negative",
    "Score": 0.89,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.0,
      "Malware_Vector": "Malicious ISO File",
      "IoCs": {
        "file_names": ["InvoiceDocs.iso", "doc-viewer.exe"]
      }
    }
  },
  {
    "Instruction": "Analyze if the malicious Powershell code in a GitHub Gist link is a common stealth download vector.",
    "Input": "Email with 'Check my script' link pointing to gist.github.com snippet that executes encoded Powershell commands.",
    "Output": "Powershell-based download cradle. Enforce script block logging, block unknown gist links, and train staff to avoid random scripts.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059.001: PowerShell"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.8,
      "Malware_Vector": "Hosted Powershell Script",
      "IoCs": {
        "domains": ["gist.github.com"],
        "scripts": ["encoded powershell commands"]
      }
    }
  },
  {
    "Instruction": "Check if an HTML smuggling technique is used, embedding a malicious file in the email's HTML body.",
    "Input": "Inline JavaScript in HTML email decodes a base64 payload into 'malware.exe' upon open in certain mail clients.",
    "Output": "HTML smuggling, evading perimeter AV. Use secure mail gateways, disable active scripting in email, and alert recipients.",
    "Sentiment": "Negative",
    "Score": 0.94,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1027: Obfuscated Files or Information"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 7.3,
      "Malware_Vector": "HTML Smuggling",
      "IoCs": {
        "scripts": ["Base64 decode -> malware.exe"],
        "file_names": []
      }
    }
  },
  {
    "Instruction": "Analyze if a disguised .msi installer served via phishing is a vector for a backdoor installation.",
    "Input": "'SetupTools.msi' pops a fake installation dialog but silently deploys 'backdoor.dll' in system directory.",
    "Output": "Malicious MSI. Block unknown MSI from untrusted sources, confirm digital signatures, and detect silent installs with EDR.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.9,
      "Malware_Vector": "Malicious MSI",
      "IoCs": {
        "file_names": ["SetupTools.msi", "backdoor.dll"]
      }
    }
  },
  {
    "Instruction": "Identify if a malicious Python script disguised as a .pyc is frequently used as a stealthy malware vector.",
    "Input": "Malware in compiled bytecode form 'update.pyc' bypasses casual inspection, downloads further RAT components.",
    "Output": "Compiled Python bytecode as a vector. Monitor .pyc files from unknown sources, enforce application whitelisting, and conduct deeper static analysis.",
    "Sentiment": "Negative",
    "Score": 0.86,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059: Command and Scripting Interpreter"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 5.7,
      "Malware_Vector": "Compiled Python Bytecode",
      "IoCs": {
        "file_names": ["update.pyc"]
      }
    }
  },
  {
    "Instruction": "Check if malicious CHR files (Chrome extension packages) are side-loaded for adware or data exfil.",
    "Input": "User installed 'CouponHero.chr' from a third-party site, extension injects ads and logs browsing habits.",
    "Output": "Rogue Chrome extension package. Advise installing only from official store, restrict extension installs, and monitor for exfil.",
    "Sentiment": "Negative",
    "Score": 0.85,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1176: Browser Extensions"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 5.4,
      "Malware_Vector": "Malicious Browser Extension (CHR)",
      "IoCs": {
        "extension_names": ["CouponHero"],
        "domains": []
      }
    }
  },
  {
    "Instruction": "Analyze a malicious .scf (Shell Command File) used to retrieve remote icons but actually executing code.",
    "Input": "SCF file triggers an SMB request to attacker server, capturing NTLM hashes for pass-the-hash attacks.",
    "Output": "SCF vector. Restrict .scf usage, patch SMB vulnerabilities, and avoid double-clicking unknown SCF files.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1557: Man-in-the-Middle"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.2,
      "Malware_Vector": "Malicious SCF File",
      "IoCs": {
        "file_names": ["malicious_icon.scf"],
        "protocols": ["SMB"]
      }
    }
  },
  {
    "Instruction": "Determine if 'packaged applets' in a .jar file is a vector for Java-based RAT.",
    "Input": "'gameclient.jar' requesting excessive permissions, hidden RAT class found upon decompilation.",
    "Output": "Trojanized .jar. Verify code signing, limit Java in the enterprise, and scan jars with advanced analysis tools.",
    "Sentiment": "Negative",
    "Score": 0.89,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059: Command and Scripting Interpreter"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.1,
      "Malware_Vector": "Malicious JAR",
      "IoCs": {
        "file_names": ["gameclient.jar"],
        "malware_family": ["Java RAT"]
      }
    }
  },
  {
    "Instruction": "Assess if a certificate re-pinning bypass in a malicious Android app is used to capture SSL traffic for MITM attacks.",
    "Input": "App disables default certificate checks, sending user data to malicious intercept proxy over HTTPS.",
    "Output": "Malware intercept. Only trust known certs, use certificate pinning, block unknown app stores, and monitor suspicious traffic patterns.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1414: Exploit OS Vulnerability (Mobile)"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.8,
      "Malware_Vector": "Modified Android App",
      "IoCs": {
        "package_names": ["com.mitm.proxy"],
        "domains": []
      }
    }
  },
  {
    "Instruction": "Check if a hidden .sh script in /tmp folder spread via SSH keys is a worm-like Linux malware vector.",
    "Input": "Compromised keys used to log in across machines, each execution of 'cronupdate.sh' adds more infected hosts.",
    "Output": "SSH worm. Remove compromised keys, reset SSH configs, rotate credentials, and watch for suspicious cron jobs.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1091: Replication Through Removable Media"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.4,
      "Malware_Vector": "SSH Worm Script",
      "IoCs": {
        "file_names": ["cronupdate.sh"],
        "removable_media": []
      }
    }
  },
  {
    "Instruction": "Analyze a boobytrapped CHM help file distributed via torrent that installs a stealth coin miner on open.",
    "Input": "'HelpFile.chm' unpacks a hidden cryptominer in background, using high CPU/GPU resources silently.",
    "Output": "CHM-based Trojan. Avoid pirated downloads, block .chm from unknown sources, and scan for cryptominers if CPU usage spikes.",
    "Sentiment": "Negative",
    "Score": 0.87,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.9,
      "Malware_Vector": "Malicious CHM",
      "IoCs": {
        "file_names": ["HelpFile.chm"],
        "malware_family": ["Cryptominer"]
      }
    }
  },
  {
    "Instruction": "Assess if a macro-enabled PowerPoint file is delivering a RAT when the presentation is opened in slideshow mode.",
    "Input": "PPT file executes malicious macro 'Auto_Open' loading a RAT from hxxp://mal-ware-site.com/rat.dll.",
    "Output": "Malicious PPT macro. Enforce macro blocking, especially in slideshow mode, and block known malicious domain.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566.001: Spearphishing Attachment"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 7.3,
      "Malware_Vector": "Macro-enabled PPT",
      "IoCs": {
        "file_extensions": [".pptm"],
        "domains": ["mal-ware-site.com"]
      }
    }
  },
  {
    "Instruction": "Check if a malicious Windows gadget (.gadget) file is a vector for code injection into sidebar.exe.",
    "Input": "Double-clicking 'weatherplus.gadget' triggers code injection into sidebar.exe, hooking kernel32.dll calls.",
    "Output": "Rogue gadget. Deprecated Windows gadgets pose security risks, block .gadget files, and use modern OS versions.",
    "Sentiment": "Negative",
    "Score": 0.85,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1055: Process Injection"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.7,
      "Malware_Vector": "Malicious Gadget File",
      "IoCs": {
        "file_names": ["weatherplus.gadget"],
        "process_injections": ["sidebar.exe"]
      }
    }
  },
  {
    "Instruction": "Analyze if the self-extracting archive (.exe) from a file-sharing site contains a worm that auto-runs upon extraction.",
    "Input": "'DocsPack.exe' includes hidden 'worm.bat' that modifies registry run keys for persistence.",
    "Output": "Self-extracting SFX as a vector. Use whitelisting to limit .exe from external sources, scan archives thoroughly.",
    "Sentiment": "Negative",
    "Score": 0.86,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1091: Replication Through Removable Media"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.1,
      "Malware_Vector": "Self-Extracting Archive",
      "IoCs": {
        "file_names": ["DocsPack.exe", "worm.bat"],
        "registry_keys": ["HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"]
      }
    }
  },
  {
    "Instruction": "Determine if an HTML file disguised as a plain text email is an HTML phishing vector delivering a malicious script.",
    "Input": "Message claims to be text but includes <script> referencing external 'stealer.js'. Execution in mail client preview.",
    "Output": "HTML email with embedded script is a phishing/malware vector. Force plain text email reading, block external scripts in mail preview.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566.002: Spearphishing Link"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 5.9,
      "Malware_Vector": "Malicious HTML Email",
      "IoCs": {
        "scripts": ["stealer.js"],
        "domains": []
      }
    }
  },
  {
    "Instruction": "Check if malicious code hidden in a WinRAR SFX comment is a vector for stealth extraction of an executable payload.",
    "Input": "Comment block in WinRAR SFX triggers 'setup.exe' on extraction, installing a backdoor quietly.",
    "Output": "SFX comment abuse. Inspect SFX archives with specialized tools, block or restrict suspicious RAR usage, and advise caution on untrusted archives.",
    "Sentiment": "Negative",
    "Score": 0.87,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.8,
      "Malware_Vector": "WinRAR SFX Archive",
      "IoCs": {
        "file_names": ["setup.exe"],
        "malware_family": []
      }
    }
  },
  {
    "Instruction": "Analyze if a phishing site embedded in a QR code is a vector for installing a mobile trojan via drive-by download.",
    "Input": "QR code at event flyers leads to 'freeapp.xyz' prompting APK download, app stealthily accesses SMS and contacts.",
    "Output": "Malicious QR code. Verify sources, use built-in camera with warnings, and restrict unknown APK installations on mobile.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1189: Drive-by Compromise"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.5,
      "Malware_Vector": "Malicious QR Code",
      "IoCs": {
        "domains": ["freeapp.xyz"],
        "package_names": ["com.freeapp"]
      }
    }
  },
  {
    "Instruction": "Assess if an infected Docker container with hidden crypto-miner scripts is a vector for supply chain compromise.",
    "Input": "Pulled 'ubuntu-base' from unofficial repo. Container runs 'start.sh' cryptominer on launch, occupying CPU cycles.",
    "Output": "Malicious container image. Use official images, enable image scanning, and ensure DevSecOps best practices to prevent compromise.",
    "Sentiment": "Negative",
    "Score": 0.92,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1587.002: Code Signing Certificates"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.1,
      "Malware_Vector": "Trojanized Docker Image",
      "IoCs": {
        "file_names": ["start.sh"],
        "malware_family": ["Cryptominer"]
      }
    }
  },
  {
    "Instruction": "Determine if a malicious OneNote file can embed .exe payloads as a lesser-known malware vector.",
    "Input": "Users get 'ProjectPlan.one' that includes hidden .exe attachments auto-launched on note open.",
    "Output": "OneNote-based malware tactic. Block .one attachments if possible, train staff, and employ advanced scanning to reveal embedded executables.",
    "Sentiment": "Negative",
    "Score": 0.89,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.6,
      "Malware_Vector": "Malicious OneNote File",
      "IoCs": {
        "file_extensions": [".one"],
        "file_names": ["ProjectPlan.one"]
      }
    }
  },
  {
    "Instruction": "Analyze the malicious puppet or chef script in DevOps pipeline that introduces hidden backdoors to deployed servers.",
    "Input": "'deployment.pp' script sets up SSH backdoor accounts, logs show external connections from unknown user.",
    "Output": "CI/CD pipeline compromise. Code review all automation scripts, limit privileged runs, and monitor for unauthorized changes.",
    "Sentiment": "Negative",
    "Score": 0.93,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1195.003: Compromise Software Dependencies and Development Tools"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 8.0,
      "Malware_Vector": "Trojanized DevOps Script",
      "IoCs": {
        "scripts": ["deployment.pp"],
        "user_accounts": ["backdooruser"]
      }
    }
  },
  {
    "Instruction": "Check if the disguised 'update.bat' delivered via chat is a simple but effective malware vector for worm-like infections.",
    "Input": "Batch file modifies registry Run key, copies itself to shared folders, scanning for new hosts on LAN.",
    "Output": "Batch file worm. Educate users not to run random .bat, block .bat at gateway, and isolate infected shares.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1091: Replication Through Removable Media"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.9,
      "Malware_Vector": "Malicious Batch File",
      "IoCs": {
        "file_names": ["update.bat"],
        "registry_keys": ["HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"]
      }
    }
  },
  {
    "Instruction": "Analyze if obfuscated JavaScript inside a SharePoint web part is a vector for distributing hidden trojans to internal users.",
    "Input": "SharePoint site manipulated to auto-run malicious JavaScript web part, stealthily fetching 'payload.exe'.",
    "Output": "Internal threat via compromised SharePoint. Monitor changes in site content, limit web part authoring rights, and scan user downloads.",
    "Sentiment": "Negative",
    "Score": 0.87,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1189: Drive-by Compromise"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.8,
      "Malware_Vector": "Compromised SharePoint",
      "IoCs": {
        "domains": [],
        "file_names": ["payload.exe"]
      }
    }
  },
  {
    "Instruction": "Determine if base64-encoded PowerShell commands in an email signature is a sneaky malware vector.",
    "Input": "Signature block includes hidden <span> with base64. Decodes to 'IEX(New-Object Net.WebClient).DownloadString(...)'.",
    "Output": "Malicious script hidden in email signature. Strip or sanitize HTML signatures, watch for suspicious base64 patterns, and block remote code calls.",
    "Sentiment": "Negative",
    "Score": 0.91,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059.001: PowerShell"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 7.2,
      "Malware_Vector": "Email Signature Script",
      "IoCs": {
        "scripts": ["base64encodedPS"],
        "domains": []
      }
    }
  },
  {
    "Instruction": "Check if the malicious .inf file is used to run hidden commands when placed on removable media, a known vector for older Windows systems.",
    "Input": "Autorun.inf includes 'open=secret.exe', runs automatically on older OS once drive is inserted.",
    "Output": "Malware via autorun INF. Patch or disable autorun, update OS, and block .inf from suspicious removable media.",
    "Sentiment": "Negative",
    "Score": 0.85,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1091: Replication Through Removable Media"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 5.7,
      "Malware_Vector": "Autorun.inf",
      "IoCs": {
        "file_names": ["autorun.inf", "secret.exe"],
        "removable_media": []
      }
    }
  },
  {
    "Instruction": "Assess if a rebranded remote administration tool (RAT) is distributed as a 'game trainer' on gaming forums, a classic Trojan vector.",
    "Input": "'AimBotPro.exe' claims to be a cheat but stealthily installs RAT that logs keystrokes and steals accounts.",
    "Output": "Trojan disguised as cheat tool. Educate gamers on the risk of 'trainers', use anti-cheat tools, and block suspicious executables.",
    "Sentiment": "Negative",
    "Score": 0.89,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1587: Develop Capabilities"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.3,
      "Malware_Vector": "Trojanized Game Trainer",
      "IoCs": {
        "file_names": ["AimBotPro.exe"],
        "malware_family": ["RAT"]
      }
    }
  },
  {
    "Instruction": "Analyze if malicious script in .ps1 format shared in a Git repository is a code-based malware vector for an internal dev environment.",
    "Input": "'update_script.ps1' added by suspicious contributor, runs credential dumper after hooking dev build pipeline.",
    "Output": "Malicious Powershell script in code repo. Implement code review, sign scripts, track commits, and remove unauthorized contributors.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1059.001: PowerShell"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.1,
      "Malware_Vector": "Malicious PS1 in Repo",
      "IoCs": {
        "scripts": ["update_script.ps1"],
        "malware_family": []
      }
    }
  },
  {
    "Instruction": "Check if the .cmd file in a shared drive is replicating itself to new machines upon drive access, typical worm-like malware behavior.",
    "Input": "File named 'HR_Policies.cmd' is set to autorun from shared folder, copying itself to local Startup directories.",
    "Output": "Self-propagating worm. Quarantine shared folder, disable .cmd auto-execution, and check endpoints for further infection.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1091: Replication Through Removable Media"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.3,
      "Malware_Vector": "Malicious CMD Worm",
      "IoCs": {
        "file_names": ["HR_Policies.cmd"],
        "removable_media": []
      }
    }
  },
  {
    "Instruction": "Analyze an LHA compressed archive from an unknown vendor email that unpacks a hidden .exe malware on older systems.",
    "Input": "'UpdateDoc.lha' decompresses to 'document.exe', which executes an infostealer.",
    "Output": "LHA-based malware distribution. Block or carefully scan legacy archive formats, and advise users not to open them unexpectedly.",
    "Sentiment": "Negative",
    "Score": 0.85,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 5.9,
      "Malware_Vector": "Legacy LHA Archive",
      "IoCs": {
        "file_names": ["UpdateDoc.lha", "document.exe"],
        "malware_family": ["Infostealer"]
      }
    }
  },
  {
    "Instruction": "Determine if malicious Java applets embedded in an old .class format on a webpage is a vector for older JRE exploits.",
    "Input": "User browsing legacy site triggers 'applet.class' that uses known JRE vulnerabilities for remote code execution.",
    "Output": "Malicious Java applet exploiting unpatched JRE. Update Java or remove it, block old applets, and use modern browsers.",
    "Sentiment": "Negative",
    "Score": 0.91,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1189: Drive-by Compromise"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 7.8,
      "Malware_Vector": "Malicious Java Applet",
      "IoCs": {
        "file_names": ["applet.class"],
        "affected_software_version": ["Outdated JRE"]
      }
    }
  },
  {
    "Instruction": "Analyze if an SMS sending Trojan is distributed by an 'unlock features' tool for Android found on shady APK sites.",
    "Input": "App 'PremiumUnlocker.apk' auto-sends premium SMS behind the scenes, incurring charges for the user.",
    "Output": "Trojan with premium SMS behavior. Only use trusted APK sources, check permission usage, and run AV scans on side-loaded apps.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1412: Data from Local System (Mobile)"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 6.2,
      "Malware_Vector": "Android Premium SMS Trojan",
      "IoCs": {
        "package_names": ["PremiumUnlocker.apk"],
        "permissions": ["SEND_SMS"]
      }
    }
  },
  {
    "Instruction": "Assess if an infected .apk re-signed with a test certificate is being sideloaded as a major malware vector for enterprise BYOD devices.",
    "Input": "Repackaged official banking app with malicious code, signed by 'Android Debug' certificate, distributed on third-party site.",
    "Output": "Common repackage + resign method. Enforce MDM or EMM with app whitelisting, block unknown certs, and encourage official store downloads.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1407: Install Insecure or Malicious Configuration"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 7.1,
      "Malware_Vector": "Repackaged Android App",
      "IoCs": {
        "package_names": ["BankingOfficial.apk"],
        "certificates": ["Android Debug"]
      }
    }
  },
  {
    "Instruction": "Check if a flash drive-based infiltration uses a disguised PDF that is actually an executable with a PDF icon, a social engineering vector.",
    "Input": "'Instructions.pdf.exe' on USB, double-click runs .exe but shows decoy PDF in background, installing keylogger.",
    "Output": "Fake PDF icon scam. Educate about file extension visibility, disable default 'hide extensions', and run AV scans on USBs.",
    "Sentiment": "Negative",
    "Score": 0.9,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.8,
      "Malware_Vector": "Executable with PDF Icon",
      "IoCs": {
        "file_names": ["Instructions.pdf.exe"],
        "malware_family": ["Keylogger"]
      }
    }
  },
  {
    "Instruction": "Analyze if an Android RAT is distributed via an SMS campaign linking to a malicious site hosting 'COVID19Track.apk'.",
    "Input": "SMS: 'Track COVID-19 in your area! Download the official app: http://fakehealthtrack.com/COVID19Track.apk'",
    "Output": "COVID-themed SMS phishing distributing RAT. Block domain, warn users not to install unknown health apps, and remove suspicious APK.",
    "Sentiment": "Negative",
    "Score": 0.93,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566: Phishing"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.9,
      "Malware_Vector": "Malicious Android App Link",
      "IoCs": {
        "domains": ["fakehealthtrack.com"],
        "package_names": ["COVID19Track.apk"]
      }
    }
  },
  {
    "Instruction": "Assess if an IExpress package (.exe) is used to stealthily install adware under the guise of a Windows update.",
    "Input": "File 'WinPatch2023.exe' is an IExpress wizard package auto-launching ad popups, altering browser settings.",
    "Output": "Misleading Windows update. Educate users to only apply official Windows updates, scan IExpress exes before installation.",
    "Sentiment": "Negative",
    "Score": 0.87,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1204: User Execution"],
      "Kill_Chain_Stage": "Installation",
      "CVSS": 5.7,
      "Malware_Vector": "IExpress Package",
      "IoCs": {
        "file_names": ["WinPatch2023.exe"],
        "malware_family": ["Adware"]
      }
    }
  },
  {
    "Instruction": "Determine if a malicious .svg image in an email is actually embedding JavaScript to load a second-stage payload (commonly used in phishing).",
    "Input": "Inline .svg references <script> tags connecting to a remote server for 'load_payload.js'.",
    "Output": "Malicious .svg acting as script container. Block or sanitize SVG content, especially in email, and check remote script calls.",
    "Sentiment": "Negative",
    "Score": 0.88,
    "Metadata": {
      "threat_type": "malware",
      "TTP": ["T1566: Phishing"],
      "Kill_Chain_Stage": "Delivery",
      "CVSS": 6.0,
      "Malware_Vector": "Malicious SVG",
      "IoCs": {
        "file_names": ["image.svg"],
        "scripts": ["load_payload.js"]
      }
    }
  }
]